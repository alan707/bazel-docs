name: Auto-merge Dependabot submodule PRs (with rebase)

on:
  pull_request:
    types: [opened, reopened, synchronize, ready_for_review]

permissions:
  contents: write
  pull-requests: write

concurrency:
  group: automerge-${{ github.event.pull_request.number }}
  cancel-in-progress: false

jobs:
  check-dependabot:
    timeout-minutes: 5
    if: >
      github.event.pull_request.user.login == 'dependabot[bot]' &&
      github.event.pull_request.base.ref == 'main'
    runs-on: ubuntu-latest
    outputs:
      should_process: ${{ steps.check.outputs.should_process }}
    steps:
      - name: Fetch Dependabot metadata
        id: meta
        uses: dependabot/fetch-metadata@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Check if upstream submodule
        id: check
        run: |
          if [[ "${{ steps.meta.outputs.package-ecosystem }}" == "submodules" ]] && \
             [[ "${{ steps.meta.outputs.dependency-names }}" == *"upstream"* ]]; then
            echo "should_process=true" >> $GITHUB_OUTPUT
          else
            echo "should_process=false" >> $GITHUB_OUTPUT
          fi

  # Generate docs after dependabot updates the submodule
  generate-docs:
    needs: check-dependabot
    if: needs.check-dependabot.outputs.should_process == 'true'
    uses: ./.github/workflows/pull-from-bazel-build.yml
    secrets: inherit

  # Auto-merge after docs are generated
  enable-automerge:
    needs: [check-dependabot, generate-docs]
    if: needs.check-dependabot.outputs.should_process == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Enable auto-merge (squash)
        run: gh pr merge --auto --squash "${{ github.event.pull_request.html_url }}"
        env:
          GH_TOKEN: ${{ secrets.GH_AUTOMERGE_PAT }}