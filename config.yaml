# Configuration for Devsite to Hugo Converter

# Docsy Theme Configuration
source_repo:
  owner: "alan707"
  name: "bazel-docs"
  branch: "main"

# Hugo site settings
hugo:
  title: "Bazel Documentation"
  description: "Bazel Documentation in an easy to navigate format"
  baseURL: "https://bazel-docs-68tmf.ondigitalocean.app/"
  languageCode: "en-us"
  theme: "docsy"
  
# Content mapping - organized into 4 main categories
content_mapping:
  # TUTORIALS - Step-by-step guides for users
  tutorials:
    type: "tutorials"
    weight: 10
    category: "Tutorials"
  start:
    type: "tutorials"
    weight: 20
    category: "Tutorials"
  basics:
    type: "tutorials"
    weight: 30
    category: "Tutorials"
    
  # HOW-TO GUIDES - Practical instructions for specific tasks
  install:
    type: "how-to-guides"
    weight: 10
    category: "How-To Guides"
  configure:
    type: "how-to-guides"
    weight: 20
    category: "How-To Guides"
  build:
    type: "how-to-guides"
    weight: 30
    category: "How-To Guides"
  run:
    type: "how-to-guides"
    weight: 40
    category: "How-To Guides"
  remote:
    type: "how-to-guides"
    weight: 50
    category: "How-To Guides"
  migrate:
    type: "how-to-guides"
    weight: 60
    category: "How-To Guides"
  rules:
    type: "how-to-guides"
    weight: 70
    category: "How-To Guides"
  docs:
    type: "how-to-guides"
    weight: 80
    category: "How-To Guides"
  
  # EXPLANATIONS - In-depth articles explaining concepts and features
  concepts:
    type: "explanations"
    weight: 10
    category: "Explanations"
  extending:
    type: "explanations"
    weight: 20
    category: "Explanations"
  external:
    type: "explanations"
    weight: 30
    category: "Explanations"
  about:
    type: "explanations"
    weight: 40
    category: "Explanations"
  community:
    type: "explanations"
    weight: 50
    category: "Explanations"
  contribute:
    type: "explanations"
    weight: 60
    category: "Explanations"
  release:
    type: "explanations"
    weight: 70
    category: "Explanations"
  
  # REFERENCE - Detailed reference material for advanced users
  reference:
    type: "reference"
    weight: 10
    category: "Reference"
  query:
    type: "reference"
    weight: 20
    category: "Reference"
  versions:
    type: "reference"
    weight: 30
    category: "Reference"
  advanced:
    type: "reference"
    weight: 40
    category: "Reference"

# CSS conversion settings
css_conversion:
  convert_to_scss: true
  preserve_custom_properties: true
  minify: false

# GitHub Actions settings
github_actions:
  listener_workflow_name: "bazel-listener"
  generator_workflow_name: "hugo-site-generator"
  dispatch_event_type: "bazel-docs-updated"

# Logging settings
logging:
  level: "INFO"
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"

# Conversion settings
conversion:
  preserve_original_structure: false
  generate_toc: true
  convert_internal_links: true
  validate_links: true
  
# File patterns to include/exclude
file_patterns:
  include:
    - "*.md"
    - "*.yaml"
    - "*.yml"
    - "*.css"
    - "*.png"
    - "*.jpg"
    - "*.jpeg"
    - "*.gif"
    - "*.svg"
  exclude:
    - "BUILD*"
    - "*.bazel"
    - "*.bzl"
    - ".git/**"
    - "node_modules/**"

# Used to automatically detect language for code blocks without explicit language identifiers
code_language_patterns:
  starlark:
    - "cc_binary("
    - "cc_library("
    - "java_library("
    - "py_binary("
    - "py_library("
    - "load("
    - "BUILD"
    - "WORKSPACE"
    - "bazel-"
    - "name ="
    - "srcs ="
    - "deps ="
    - "cc_toolchain("
    - "toolchain("
    - "filegroup("
    - "exports_files("
  bash:
    - "bazel "
    - "bazel help"
    - "bazel build"
    - "bazel test"
    - "bazel run"
    - "bazel query"
    - "#!/bin/bash"
    - "#!/bin/sh"
    - "echo "
    - "export "
    - "source "
    - "$("
    - "${"
    - "$"
    - "npm "
    - "yarn "
    - "git "
    - "cd "
    - "mkdir "
    - "rm "
    - "cp "
  python:
    - "def "
    - "class "
    - "import "
    - "from "
    - "print("
    - "__init__"
    - "self."
    - "@"
    - "lambda "
    - "return "
    - "if __name__"
    - "try:"
    - "except:"
  cpp:
    - "#include"
    - "int main"
    - "std::"
    - "namespace "
    - "cout <<"
    - "void "
    - "template<"
    - "nullptr"
    - ".cc"
    - ".cpp"
    - ".h"
    - "cin >>"
    - "using namespace"
    - "printf("
    - "scanf("
  java:
    - "public class"
    - "private "
    - "protected "
    - "import java"
    - "package "
    - "extends "
    - "implements "
    - "@Override"
    - "System.out.println"
    - "new "
    - "throw new"
    - "catch ("
  javascript:
    - "function "
    - "const "
    - "let "
    - "var "
    - "=>"
    - "console.log"
    - "require("
    - "export "
    - "import "
    - "async "
    - "await "
    - "document."
    - "window."
    - "addEventListener"
  typescript:
    - "interface "
    - "type "
    - ": string"
    - ": number"
    - ": boolean"
    - "enum "
    - "readonly "
    - "as "
  yaml:
    - "name:"
    - "type:"
    - "- name:"
    - "kind:"
    - "apiVersion:"
    - "metadata:"
    - "spec:"
  json:
    - '{"'
    - '":'
    - '": '
    - '['
    - '],'  
  xml:
    - "<?xml"
    - "<"
    - "/>"
    - "xmlns"
  html:
    - "<!DOCTYPE"
    - "<html"
    - "<body"
    - "<div"
    - "<span"
    - "<p>"
    - "<h1"
  css:
    - "body {"
    - "div {"
    - ".class"
    - "#id"
    - "color:"
    - "background:"
    - "@media"
  sql:
    - "SELECT "
    - "FROM "
    - "WHERE "
    - "INSERT INTO"
    - "UPDATE "
    - "DELETE FROM"
    - "CREATE TABLE"
    - "DROP TABLE"