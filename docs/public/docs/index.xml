<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Using Bazel on Bazel Documentation</title>
    <link>http://localhost:1313/docs/</link>
    <description>Recent content in Using Bazel on Bazel Documentation</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 01 Jan 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/docs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Android and Bazel</title>
      <link>http://localhost:1313/docs/bazel-and-android/</link>
      <pubDate>Mon, 01 Jan 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/bazel-and-android/</guid>
      <description>&lt;p&gt;This page contains resources that help you use Bazel with Android projects. It&#xA;links to a tutorial, build rules, and other information specific to building&#xA;Android projects with Bazel.&lt;/p&gt;&#xA;&lt;h2 id=&#34;getting-started&#34;&gt;Getting started&lt;/h2&gt;&#xA;&lt;p&gt;The following resources will help you work with Bazel on Android projects:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://localhost:1313/start/android-app/&#34;&gt;Tutorial: Building an Android app&lt;/a&gt;. This&#xA;tutorial is a good place to start learning about Bazel commands and concepts,&#xA;and how to build Android apps with Bazel.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://developer.android.com/codelabs/bazel-android-intro#0&#34;&gt;Codelab: Building Android Apps with Bazel&lt;/a&gt;.&#xA;This codelab explains how to build Android apps with Bazel.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;features&#34;&gt;Features&lt;/h2&gt;&#xA;&lt;p&gt;Bazel has Android rules for building and testing Android apps, integrating with&#xA;the SDK/NDK, and creating emulator images. There are also Bazel plugins for&#xA;Android Studio and IntelliJ.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Android Build Performance</title>
      <link>http://localhost:1313/docs/android-build-performance/</link>
      <pubDate>Mon, 01 Jan 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/android-build-performance/</guid>
      <description>&lt;p&gt;This page contains information on optimizing build performance for Android&#xA;apps specifically. For general build performance optimization with Bazel, see&#xA;&lt;a href=&#34;http://localhost:1313/rules/performance/&#34;&gt;Optimizing Performance&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;recommended-flags&#34;&gt;Recommended flags&lt;/h2&gt;&#xA;&lt;p&gt;The flags are in the&#xA;&lt;a href=&#34;http://localhost:1313/run/bazelrc#bazelrc-syntax-semantics/&#34;&gt;&lt;code&gt;bazelrc&lt;/code&gt; configuration syntax&lt;/a&gt;, so&#xA;they can be pasted directly into a &lt;code&gt;bazelrc&lt;/code&gt; file and invoked with&#xA;&lt;code&gt;--config=&amp;lt;configuration_name&amp;gt;&lt;/code&gt; on the command line.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Profiling performance&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Bazel writes a JSON trace profile by default to a file called&#xA;&lt;code&gt;command.profile.gz&lt;/code&gt; in Bazel&amp;rsquo;s output base.&#xA;See the &lt;a href=&#34;http://localhost:1313/rules/performance#performance-profiling/&#34;&gt;JSON Profile documentation&lt;/a&gt; for&#xA;how to read and interact with the profile.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Android Instrumentation Tests</title>
      <link>http://localhost:1313/docs/android-instrumentation-test/</link>
      <pubDate>Mon, 01 Jan 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/android-instrumentation-test/</guid>
      <description>&lt;p&gt;&lt;em&gt;If you&amp;rsquo;re new to Bazel, start with the &lt;a href=&#34;http://localhost:1313/start/android-app/&#34;&gt;Building Android with&#xA;Bazel&lt;/a&gt; tutorial.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/docs/images/android_test.gif&#34; alt=&#34;Running Android instrumentation tests in parallel&#34; title=&#34;Android instrumentation test&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Figure 1.&lt;/strong&gt; Running parallel Android instrumentation tests.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://localhost:1313/reference/be/android#android_instrumentation_test/&#34;&gt;&lt;code&gt;android_instrumentation_test&lt;/code&gt;&lt;/a&gt;&#xA;allows developers to test their apps on Android emulators and devices.&#xA;It utilizes real Android framework APIs and the Android Test Library.&lt;/p&gt;&#xA;&lt;p&gt;For hermeticity and reproducibility, Bazel creates and launches Android&#xA;emulators in a sandbox, ensuring that tests always run from a clean state. Each&#xA;test gets an isolated emulator instance, allowing tests to run in parallel&#xA;without passing states between them.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Apple Apps and Bazel</title>
      <link>http://localhost:1313/docs/bazel-and-apple/</link>
      <pubDate>Mon, 01 Jan 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/bazel-and-apple/</guid>
      <description>&lt;p&gt;This page contains resources that help you use Bazel to build macOS and iOS&#xA;projects. It links to a tutorial, build rules, and other information specific to&#xA;using Bazel to build and test for those platforms.&lt;/p&gt;&#xA;&lt;h2 id=&#34;working-with-bazel&#34;&gt;Working with Bazel&lt;/h2&gt;&#xA;&lt;p&gt;The following resources will help you work with Bazel on macOS and iOS projects:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://localhost:1313/start/ios-app/&#34;&gt;Tutorial: Building an iOS app&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://localhost:1313/reference/be/objective-c/&#34;&gt;Objective-C build rules&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/bazelbuild/rules_apple&#34;&gt;General Apple rules&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://localhost:1313/install/ide/&#34;&gt;Integration with Xcode&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;migrating-to-bazel&#34;&gt;Migrating to Bazel&lt;/h2&gt;&#xA;&lt;p&gt;If you currently build your macOS and iOS projects with Xcode, follow the steps&#xA;in the migration guide to start building them with Bazel:&lt;/p&gt;</description>
    </item>
    <item>
      <title>bazel mobile-install</title>
      <link>http://localhost:1313/docs/mobile-install/</link>
      <pubDate>Mon, 01 Jan 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/mobile-install/</guid>
      <description>&lt;p class=&#34;lead&#34;&gt;Fast iterative development for Android&lt;/p&gt;&#xA;&lt;p&gt;This page describes how &lt;code&gt;bazel mobile-install&lt;/code&gt; makes iterative development&#xA;for Android much faster. It describes the benefits of this approach versus the&#xA;challenges of the traditional app install method.&lt;/p&gt;&#xA;&lt;h2 id=&#34;summary&#34;&gt;Summary&lt;/h2&gt;&#xA;&lt;p&gt;To install small changes to an Android app very quickly, do the following:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Find the &lt;code&gt;android_binary&lt;/code&gt; rule of the app you want to install.&lt;/li&gt;&#xA;&lt;li&gt;Disable Proguard by removing the &lt;code&gt;proguard_specs&lt;/code&gt; attribute.&lt;/li&gt;&#xA;&lt;li&gt;Set the &lt;code&gt;multidex&lt;/code&gt; attribute to &lt;code&gt;native&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Set the &lt;code&gt;dex_shards&lt;/code&gt; attribute to &lt;code&gt;10&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Connect your device running ART (not Dalvik) over USB and enable USB&#xA;debugging on it.&lt;/li&gt;&#xA;&lt;li&gt;Run &lt;code&gt;bazel mobile-install :your_target&lt;/code&gt;. App startup will be a little&#xA;slower than usual.&lt;/li&gt;&#xA;&lt;li&gt;Edit the code or Android resources.&lt;/li&gt;&#xA;&lt;li&gt;Run &lt;code&gt;bazel mobile-install --incremental :your_target&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Enjoy not having to wait a lot.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;Some command line options to Bazel that may be useful:&lt;/p&gt;</description>
    </item>
    <item>
      <title>C&#43;&#43; and Bazel</title>
      <link>http://localhost:1313/docs/bazel-and-cpp/</link>
      <pubDate>Mon, 01 Jan 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/bazel-and-cpp/</guid>
      <description>&lt;p&gt;This page contains resources that help you use Bazel with C++ projects. It links&#xA;to a tutorial, build rules, and other information specific to building C++&#xA;projects with Bazel.&lt;/p&gt;&#xA;&lt;h2 id=&#34;working-with-bazel&#34;&gt;Working with Bazel&lt;/h2&gt;&#xA;&lt;p&gt;The following resources will help you work with Bazel on C++ projects:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://localhost:1313/start/cpp/&#34;&gt;Tutorial: Building a C++ project&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://localhost:1313/tutorials/cpp-use-cases/&#34;&gt;C++ common use cases&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://localhost:1313/reference/be/c-cpp/&#34;&gt;C/C++ rules&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;Essential Libraries&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://abseil.io/docs/cpp/quickstart&#34;&gt;Abseil&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/nelhage/rules_boost&#34;&gt;Boost&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/hedronvision/bazel-make-cc-https-easy&#34;&gt;HTTPS Requests: CPR and libcurl&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://localhost:1313/docs/cc-toolchain-config-reference/&#34;&gt;C++ toolchain configuration&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://localhost:1313/tutorials/ccp-toolchain-config/&#34;&gt;Tutorial: Configuring C++ toolchains&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://localhost:1313/configure/integrate-cpp/&#34;&gt;Integrating with C++ rules&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;best-practices&#34;&gt;Best practices&lt;/h2&gt;&#xA;&lt;p&gt;In addition to &lt;a href=&#34;http://localhost:1313/configure/best-practices/&#34;&gt;general Bazel best practices&lt;/a&gt;, below are&#xA;best practices specific to C++ projects.&lt;/p&gt;</description>
    </item>
    <item>
      <title>C&#43;&#43; Toolchain Configuration</title>
      <link>http://localhost:1313/docs/cc-toolchain-config-reference/</link>
      <pubDate>Mon, 01 Jan 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/cc-toolchain-config-reference/</guid>
      <description>&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;&#xA;&lt;p&gt;To invoke the compiler with the right options, Bazel needs some knowledge about&#xA;the compiler internals, such as include directories and important flags.&#xA;In other words, Bazel needs a simplified model of the compiler to understand its&#xA;workings.&lt;/p&gt;&#xA;&lt;p&gt;Bazel needs to know the following:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Whether the compiler supports thinLTO, modules, dynamic linking, or PIC&#xA;(position independent code).&lt;/li&gt;&#xA;&lt;li&gt;Paths to the required tools such as gcc, ld, ar, objcopy, and so on.&lt;/li&gt;&#xA;&lt;li&gt;The built-in system include directories. Bazel needs these to validate that&#xA;all headers that were included in the source file were properly declared in&#xA;the &lt;code&gt;BUILD&lt;/code&gt; file.&lt;/li&gt;&#xA;&lt;li&gt;The default sysroot.&lt;/li&gt;&#xA;&lt;li&gt;Which flags to use for compilation, linking, archiving.&lt;/li&gt;&#xA;&lt;li&gt;Which flags to use for the supported compilation modes (opt, dbg, fastbuild).&lt;/li&gt;&#xA;&lt;li&gt;Make variables specifically required by the compiler.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;If the compiler has support for multiple architectures, Bazel needs to configure&#xA;them separately.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Commands and Options</title>
      <link>http://localhost:1313/docs/user-manual/</link>
      <pubDate>Mon, 01 Jan 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/user-manual/</guid>
      <description>&lt;p&gt;This page covers the options that are available with various Bazel commands,&#xA;such as &lt;code&gt;bazel build&lt;/code&gt;, &lt;code&gt;bazel run&lt;/code&gt;, and &lt;code&gt;bazel test&lt;/code&gt;. This page is a companion&#xA;to the list of Bazel&amp;rsquo;s commands in &lt;a href=&#34;http://localhost:1313/run/build/&#34;&gt;Build with Bazel&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;target-syntax&#34;&gt;Target syntax&lt;/h2&gt;&#xA;&lt;p&gt;Some commands, like &lt;code&gt;build&lt;/code&gt; or &lt;code&gt;test&lt;/code&gt;, can operate on a list of targets. They&#xA;use a syntax more flexible than labels, which is documented in&#xA;&lt;a href=&#34;http://localhost:1313/run/build#specifying-build-targets/&#34;&gt;Specifying targets to build&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;options&#34;&gt;Options&lt;/h2&gt;&#xA;&lt;p&gt;The following sections describe the options available during a&#xA;build. When &lt;code&gt;--long&lt;/code&gt; is used on a help command, the on-line&#xA;help messages provide summary information about the meaning, type and&#xA;default value for each option.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Configurable Build Attributes</title>
      <link>http://localhost:1313/docs/configurable-attributes/</link>
      <pubDate>Mon, 01 Jan 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/configurable-attributes/</guid>
      <description>&lt;p&gt;&lt;strong&gt;&lt;em&gt;Configurable attributes&lt;/em&gt;&lt;/strong&gt;, commonly known as &lt;a href=&#34;http://localhost:1313/reference/be/functions#select/&#34;&gt;&lt;code&gt;select()&lt;/code&gt;&lt;/a&gt;, is a Bazel feature that lets users toggle the values&#xA;of build rule attributes at the command line.&lt;/p&gt;&#xA;&lt;p&gt;This can be used, for example, for a multiplatform library that automatically&#xA;chooses the appropriate implementation for the architecture, or for a&#xA;feature-configurable binary that can be customized at build time.&lt;/p&gt;&#xA;&lt;h2 id=&#34;example&#34;&gt;Example&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# myapp/BUILD&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cc_binary(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    name = &amp;#34;mybinary&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    srcs = [&amp;#34;main.cc&amp;#34;],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    deps = select({&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &amp;#34;:arm_build&amp;#34;: [&amp;#34;:arm_lib&amp;#34;],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &amp;#34;:x86_debug_build&amp;#34;: [&amp;#34;:x86_dev_lib&amp;#34;],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &amp;#34;//conditions:default&amp;#34;: [&amp;#34;:generic_lib&amp;#34;],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    }),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;config_setting(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    name = &amp;#34;arm_build&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    values = {&amp;#34;cpu&amp;#34;: &amp;#34;arm&amp;#34;},&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;config_setting(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    name = &amp;#34;x86_debug_build&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    values = {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &amp;#34;cpu&amp;#34;: &amp;#34;x86&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &amp;#34;compilation_mode&amp;#34;: &amp;#34;dbg&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This declares a &lt;code&gt;cc_binary&lt;/code&gt; that &amp;ldquo;chooses&amp;rdquo; its deps based on the flags at the&#xA;command line. Specifically, &lt;code&gt;deps&lt;/code&gt; becomes:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Java and Bazel</title>
      <link>http://localhost:1313/docs/bazel-and-java/</link>
      <pubDate>Mon, 01 Jan 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/bazel-and-java/</guid>
      <description>&lt;p&gt;This page contains resources that help you use Bazel with Java projects. It&#xA;links to a tutorial, build rules, and other information specific to building&#xA;Java projects with Bazel.&lt;/p&gt;&#xA;&lt;h2 id=&#34;working-with-bazel&#34;&gt;Working with Bazel&lt;/h2&gt;&#xA;&lt;p&gt;The following resources will help you work with Bazel on Java projects:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://localhost:1313/start/java/&#34;&gt;Tutorial: Building a Java Project&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://localhost:1313/reference/be/java/&#34;&gt;Java rules&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;migrating-to-bazel&#34;&gt;Migrating to Bazel&lt;/h2&gt;&#xA;&lt;p&gt;If you currently build your Java projects with Maven, follow the steps in the&#xA;migration guide to start building your Maven projects with Bazel:&lt;/p&gt;</description>
    </item>
    <item>
      <title>JavaScript and Bazel</title>
      <link>http://localhost:1313/docs/bazel-and-javascript/</link>
      <pubDate>Mon, 01 Jan 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/bazel-and-javascript/</guid>
      <description>&lt;p&gt;This page contains resources that help you use Bazel with JavaScript projects.&#xA;It links to build rules and other information specific to building JavaScript&#xA;with Bazel.&lt;/p&gt;&#xA;&lt;p&gt;The following resources will help you work with Bazel on JavaScript projects:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/bazelbuild/rules_nodejs&#34;&gt;NodeJS toolchain&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/aspect-build/rules_js&#34;&gt;rules_js&lt;/a&gt; - Bazel rules for building JavaScript programs&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/aspect-build/rules_esbuild&#34;&gt;rules_esbuild&lt;/a&gt; - Bazel rules for &lt;a href=&#34;https://esbuild.github.io&#34;&gt;esbuild&lt;/a&gt; JS bundler&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/aspect-build/rules_terser&#34;&gt;rules_terser&lt;/a&gt; - Bazel rules for &lt;a href=&#34;https://terser.org&#34;&gt;Terser&lt;/a&gt; - a JavaScript minifier&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/aspect-build/rules_swc&#34;&gt;rules_swc&lt;/a&gt; - Bazel rules for &lt;a href=&#34;https://swc.rs&#34;&gt;swc&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/aspect-build/rules_ts&#34;&gt;rules_ts&lt;/a&gt; - Bazel rules for &lt;a href=&#34;http://typescriptlang.org&#34;&gt;TypeScript&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/aspect-build/rules_webpack&#34;&gt;rules_webpack&lt;/a&gt; - Bazel rules for &lt;a href=&#34;https://webpack.js.org&#34;&gt;Webpack&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/aspect-build/rules_rollup&#34;&gt;rules_rollup&lt;/a&gt; - Bazel rules for &lt;a href=&#34;https://rollupjs.org&#34;&gt;Rollup&lt;/a&gt; - a JavaScript bundler&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/aspect-build/rules_jest&#34;&gt;rules_jest&lt;/a&gt; - Bazel rules to run tests using &lt;a href=&#34;https://jestjs.io&#34;&gt;Jest&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/aspect-build/rules_jasmine&#34;&gt;rules_jasmine&lt;/a&gt; - Bazel rules to run tests using &lt;a href=&#34;https://jasmine.github.io/&#34;&gt;Jasmine&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/aspect-build/rules_cypress&#34;&gt;rules_cypress&lt;/a&gt; - Bazel rules to run tests using &lt;a href=&#34;https://cypress.io&#34;&gt;Cypress&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/aspect-build/rules_deno&#34;&gt;rules_deno&lt;/a&gt; - Bazel rules for &lt;a href=&#34;http://deno.land&#34;&gt;Deno&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Sandboxing</title>
      <link>http://localhost:1313/docs/sandboxing/</link>
      <pubDate>Mon, 01 Jan 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/sandboxing/</guid>
      <description>&lt;p&gt;This article covers sandboxing in Bazel and debugging your sandboxing&#xA;environment.&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;Sandboxing&lt;/em&gt; is a permission restricting strategy that isolates processes from&#xA;each other or from resources in a system. For Bazel, this means restricting file&#xA;system access.&lt;/p&gt;&#xA;&lt;p&gt;Bazel&amp;rsquo;s file system sandbox runs processes in a working directory that only&#xA;contains known inputs, such that compilers and other tools don&amp;rsquo;t see source&#xA;files they should not access, unless they know the absolute paths to them.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Using the Android Native Development Kit with Bazel</title>
      <link>http://localhost:1313/docs/android-ndk/</link>
      <pubDate>Mon, 01 Jan 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/android-ndk/</guid>
      <description>&lt;p&gt;&lt;em&gt;If you&amp;rsquo;re new to Bazel, please start with the &lt;a href=&#34;http://localhost:1313/start/android-app/&#34;&gt;Building Android with&#xA;Bazel&lt;/a&gt; tutorial.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;&#xA;&lt;p&gt;Bazel can run in many different build configurations, including several that use&#xA;the Android Native Development Kit (NDK) toolchain. This means that normal&#xA;&lt;code&gt;cc_library&lt;/code&gt; and &lt;code&gt;cc_binary&lt;/code&gt; rules can be compiled for Android directly within&#xA;Bazel. Bazel accomplishes this by using the &lt;code&gt;android_ndk_repository&lt;/code&gt; repository&#xA;rule.&lt;/p&gt;&#xA;&lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h2&gt;&#xA;&lt;p&gt;Please ensure that you have installed the Android SDK and NDK.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
